class Escola:
     _init_(self, nome, endereco):
        # Inicializa os atributos da classe Escola
        self.__nome = nome
        self.__endereco = endereco

    # Getter para o nome
     get_nome(self):
        return self.__nome

    # Setter para o nome
     set_nome(self, nome):
        self.__nome = nome

    # Getter para o endereço
     get_endereco(self):
        return self.__endereco

    # Setter para o endereço
     set_endereco(self, endereco):
        self.__endereco = endereco
Classe Curso (Herda de Escola e inclui construtor)
class Curso(Escola):
     _init_(self, nome, endereco, cargaHoraria):
        # Chama o construtor da classe pai (Escola)
        super()._init_(nome, endereco)
        # Inicializa o atributo cargaHoraria
        self.__cargaHoraria = cargaHoraria

    # Getter para a carga horária
     get_carga_horaria(self):
        return self.__cargaHoraria

    # Setter para a carga horária
     set_carga_horaria(self, cargaHoraria):
        self.__cargaHoraria = cargaHoraria

    # Método para exibir informações
     exibirInformacoes(self):
        print(f"Nome: {self.get_nome()}")
        print(f"Endereço: {self.get_endereco()}")
        print(f"Carga Horária: {self.get_carga_horaria()} horas")
Classe CursoTecnico (Herda de Curso e inclui construtor)
class CursoTecnico(Curso):
     _init_(self, nome, endereco, cargaHoraria, modalidade):
        # Chama o construtor da classe pai (Curso)
        super()._init_(nome, endereco, cargaHoraria)
        # Inicializa o atributo modalidade
        self.__modalidade = modalidade

    # Getter para modalidade
     get_modalidade(self):
        return self.__modalidade

    # Setter para modalidade
     set_modalidade(self, modalidade):
        self.__modalidade = modalidade

    # Sobrescrevendo o método exibirInformacoes
     exibirInformacoes(self):
        # Chama o método da classe pai
        super().exibirInformacoes()
        # Adiciona a exibição do atributo modalidade
        print(f"Modalidade: {self.get_modalidade()}")
