class Escola:
    def _init_(self, nome, endereco):
        self.__nome = nome  # Atributo privado
        self.__endereco = endereco  # Atributo privado
 
    def get_nome(self):
        return self.__nome

    def set_nome(self, nome):
        self.__nome = nome

    def get_endereco(self):
        return self.__endereco

    def set_endereco(self, endereco):
        self.__endereco = endereco
class Curso(Escola):
    def _init_(self, nome, endereco, cargaHoraria):
        # Chamando o construtor da classe base (Escola) para inicializar nome e endereco
        super()._init_(nome, endereco)
        self.__cargaHoraria = cargaHoraria  # Atributo privado específico de Curso
  
    def get_cargaHoraria(self):
        return self.__cargaHoraria

    def set_cargaHoraria(self, cargaHoraria):
        self.__cargaHoraria = cargaHoraria

    def exibirInformacoes(self):
        print(f"Nome: {self.get_nome()}")
        print(f"Endereço: {self.get_endereco()}")
        print(f"Carga Horária: {self.get_cargaHoraria()} horas")
class CursoTecnico(Curso):
    def _init_(self, nome, endereco, cargaHoraria, modalidade):
        # Chamando o construtor da classe base (Curso) para inicializar nome, endereco e cargaHoraria
        super()._init_(nome, endereco, cargaHoraria)
        self.__modalidade = modalidade  # Atributo privado específico de CursoTecnico
        
    def get_modalidade(self):
        return self.__modalidade

    def set_modalidade(self, modalidade):
        self.__modalidade = modalidade

    def exibirInformacoes(self):
        super().exibirInformacoes() 
        print(f"Modalidade: {self.get_modalidade()}")
class Main:
    @staticmethod
    def main():
       
        curso1 = Curso("Curso de Python", "Avenida dos Programadores, 101", 120)

        print("Informações do Curso:")
        curso1.exibirInformacoes()
      
        curso_tecnico = CursoTecnico("Curso Técnico em Redes", "Rua da Tecnologia, 200", 200, "Presencial")

        print("\nInformações do Curso Técnico:")
        curso_tecnico.exibirInformacoes()

if _name_ == "_main_":
    Main.main()
